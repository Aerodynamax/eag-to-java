"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TagType = exports.NBT_TAG = void 0;
const getTagId_1 = require("../utils/getTagId");
class NBT_TAG {
    constructor(name) {
        this.name = name;
    }
    write(buf, payload) {
        throw new Error(`${Object.getPrototypeOf(this).constructor.name}#write is not implemented!`);
    }
    read(buf) {
        throw new Error(`${Object.getPrototypeOf(this).constructor.name}#read is not implemented!`);
    }
    get isNameless() {
        return typeof this.name !== 'string';
    }
    toJSON() {
        return {
            name: this.name,
            type: (0, getTagId_1.getTagId)(this),
            payload: this.payload,
        };
    }
}
exports.NBT_TAG = NBT_TAG;
var TagType;
(function (TagType) {
    TagType[TagType["Byte"] = 1] = "Byte";
    TagType[TagType["Short"] = 2] = "Short";
    TagType[TagType["Int"] = 3] = "Int";
    TagType[TagType["Long"] = 4] = "Long";
    TagType[TagType["Float"] = 5] = "Float";
    TagType[TagType["Double"] = 6] = "Double";
    TagType[TagType["ByteArray"] = 7] = "ByteArray";
    TagType[TagType["String"] = 8] = "String";
    TagType[TagType["List"] = 9] = "List";
    TagType[TagType["Compound"] = 10] = "Compound";
    TagType[TagType["IntArray"] = 11] = "IntArray";
    TagType[TagType["LongArray"] = 12] = "LongArray";
})(TagType = exports.TagType || (exports.TagType = {}));
