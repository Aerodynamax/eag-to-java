"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./Byte"), exports);
__exportStar(require("./ByteArray"), exports);
__exportStar(require("./Double"), exports);
__exportStar(require("./Float"), exports);
__exportStar(require("./Int"), exports);
__exportStar(require("./IntArray"), exports);
__exportStar(require("./List"), exports);
__exportStar(require("./Long"), exports);
__exportStar(require("./LongArray"), exports);
__exportStar(require("./Short"), exports);
__exportStar(require("./String"), exports);
/**
 * Wondering why Compound is missing?
 * For some reasons if we include
 * Compound here it doesn't add it
 * to the exports and stop here.
 *
 * The workaround I chose is to
 * programmaticaly add the TAG_Compound
 * to the list. It's done in the
 * Compound.ts file.
 */
